<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_search.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABN1JREFUaEPtmetPU2ccx8nci+H7bS93Y38AWVz2RjAS2rJCr56WthQQEIayzczE
        aNxCZuaicTczokMGzbgakm3ZK1+yAAoDEXCMq0KRm1IO7VroufSc/vbrfEiwHmhLT6Fm+ySfnEP5PX2+
        v3OePieFlP95XmlkIK2ZgRPNLLSid1G6hQUejxweV8hrrS08HG9j4C0ybG/pAHixkQPbTyz0NLIAsYhj
        bjVxYGkH2EfebndxrIHKsS5OOvxBiMeGdXGsgYFs8raJpxZgf926WP/jehDkVazFu5FKpkkMdT549bpP
        HLi+FoSE6BP76r3wMplOXkLhr/rEiWu+ICRSnGPsitxN1C7A/hqvOFDjDcJ21mGAn9kgdPAAtwWAOyJA
        L9qCa12qfiu/94p9DoCXyPTx851HrL/ytwhb+YNXhJtcEAaDIGkPNiM1LoLXyPTx8a0noPzGLcJWNuLa
        7cerLBV8w1ADUmMj+ZU7kEVi7Ixq3Ocv08Lk5VURpLyBu8ddicCbDYVvwKUlNT6ywmhcz4lLLsF+kRZB
        ynoMJRW+MwDQho3VeJ6EkBobi1/SgpnEiZ0vXELvhRUBwv16VXhm2Qzgz01rOKFEfVy6hC4SJzbOL8Pb
        510CSPkb7irh4a/iFZeqjdfPlwPB6iV4ncSKnurHQlX1sgDhXsKrEr50HD7xmTpZdQnlJFb0nHsUaPv0
        kQDhOnDL3Bz+dz4In0nUyem5pUATiRU9ZxeFobNLAoR7k3l6+TTgni1VJ6dnloR+Eit6Ti/y9OnFAITb
        iVd8cwMX8BZL1cnqAv+YxIqeUws8f2ohAOH2he0+Z3ACqTo5/WSBZ0is6Dk5z/Mn5wMQbjfu8xvhQ+dS
        NXL78fwOGqia4+kP5wIQLj7c/g3ehV7Ec6ka2X24gyVUOcsPHZ/FL7BJYKWTi/1DXO7kWyucPCSD5TN8
        I4kVPWVO/kTZDA9J4TQf+4OsdIpJOzrNw577gAuWTPtfI7Fiw36f7Sl8wMGeep/tJHFixzLJ2WxTHOyl
        1imOInFih8IvE/mT3DgKe6F5gh3BL1UvkDg7g5pksqkJDvZC869/FJMY8WEYY+sM4xzspqZfeqbtBeWe
        QkvFuyTGzqEeQqp2lOnXjrGwG+q7nLStqBIKbMfQMo/FUhp/E/oh3yvqv5jx3FEWEmle76LXUvoRWC2l
        myyRp4lsbEI1wvTnjLCQCNUdM6v5JVVgyT8qYbE8Tbx3G1IVf7K1KMipuv3WtMl6DMym4m0s8lBUYfxN
        hDh8j8k+POwfy7rHQHz6R5Tt3cUmyu42UYUQSepI4SpFFb1DYsQH1Q77Mof9lsxhpvvQkD94aJiBqHxS
        24VH88Y+bzTa0yljAU0dsWPISBa4ZbsTGxwcYt5AP8gYYpozBpkBPF/JGPRzIfHcha/dwd81HRxkKjIH
        Gck/kxiN+ekGvY02GmwQWaub0lnkbUIOQk3odVbaoLdCZC1uXTI2oc81HdBpzG6dNh8iqdXk0zqdOTn+
        abiZXGxCk2dyazUmDLm9WNdChiUXGo0xPS+XolHYVjU1S4YkHxqVMT1XbaBz1UbYRicpT05UKv2BHJXB
        /X6OAbawmZQmL6EmVErdao5KB0+rXVGrDW+SsuRGochLUyo1N5QK7bxSoZlTKTSt6qznJPx/hJSUfwBA
        1NglAkWjeAAAAABJRU5ErkJggg==
</value>
  </data>
</root>